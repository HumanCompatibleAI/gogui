<chapter id="analyze">
<title>Analyze Commands</title>
  
<para>
GoGui allows to define analyze commands.
An analyze command is sent to the Go program and the response is displayed
graphically on the board.
</para>
  
<para>
The possible analyze commands are defined in the
configuration file <userinput>~/.gogui/analyze-commands</userinput>.
All files beginning with <userinput>~/.gogui/analyze-commands</userinput>
are loaded.
If none exists, a default file is created.
There is one line per command in the format:
</para>
  
<blockquote>
<simpara>
<userinput>
type/label/command[/section[/scale]]
</userinput>
</simpara>
</blockquote>
  
<section>
<title>Types</title>
<para>
The command type determines what format the response is expected to be and
how it is interpreted and displayed.
It can be one of the following:

<variablelist>

<varlistentry>
<term><userinput>bwboard</userinput></term>
<listitem>
<simpara>
The response of the command is a board of strings.
Strings "b" or "black" will be displayed as black squares,
"w" or "white" as white squares, all other strings are
not displayed.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>cboard</userinput></term>
<listitem>
<simpara>
The response of the command is a board of strings with color names.
They will be displayed as background colors for the fields.
Valid color names are blue, cyan, green, gray, magenta,
pink, red, and yellow. Unknown names or the special string ""
are ignored.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>dboard</userinput></term>
<listitem>
<simpara>
The response of the command is a board of floating point
numbers.
They will be displayed as black (positive) and white (negative)
squares on the board.
The maximum size of a square is such that the corner would touch
the edge of a stone on that field and the edge length of the
square is proportional to the floating point number.
The numbers are expected to be between -1 and 1.
Use the <userinput>scale</userinput> option, if they are not.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>hstring</userinput></term>
<listitem>
<simpara>
The response is a multi-line text and will be displayed in a window
using syntax highlighting for lines with a single word ending with ':' (bold),
points and moves (blue), black and white (purple), numbers (green),
uppercase words (red).
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>hpstring</userinput></term>
<listitem>
<simpara>
Combines <userinput>pstring</userinput> and <userinput>hstring</userinput>.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>none</userinput></term>
<listitem>
<simpara>
The response is not displayed.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>plist</userinput></term>
<listitem>
<simpara>
The response of the command is a list of points.
All points will be marked on the board.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>pspairs</userinput></term>
<listitem>
<simpara>
The response of the command is a list of point string pairs.
The strings are displayed as labels on the points.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>pstring</userinput></term>
<listitem>
<simpara>
The response of the command is a text containing points.
If the text has only a single line, it will be displayed in the status line.
If it has multiple lines, a window will popup.
All valid points contained in the text will be marked on the board.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>sboard</userinput></term>
<listitem>
<simpara>
The response of the command is a board of strings.
A string should not be longer than 3-4 characters to fit on a point on the
board and may not contain white spaces.
The special string "" is used for no string on a point.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>string</userinput></term>
<listitem>
<simpara>
The response of the command is a text.
If the text has only a single line, it will be displayed in the status line.
If it has multiple lines, a window will popup.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>var</userinput></term>
<listitem>
<simpara>
The response of the command is a variation of moves
containing points or passes.
Text not containg points is ignored.
They will be displayed as numbered stones on the board,
the current color to move is assumed to move first.
Additionally the response is displayed as a string.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>varb</userinput></term>
<listitem>
<simpara>
Like <userinput>var</userinput>, but black is assumed to move first.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>varp</userinput></term>
<listitem>
<simpara>
Like <userinput>var</userinput>, but the command needs a point argument
and the color at that point is assumed to move first.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>varpo</userinput></term>
<listitem>
<simpara>
Like <userinput>var</userinput>, but the command needs a point argument
and the other color than the color at that point is assumed to move first.
</simpara>
</listitem>
</varlistentry>

<varlistentry>
<term><userinput>varw</userinput></term>
<listitem>
<simpara>
Like <userinput>var</userinput>, but white is assumed to move first.
</simpara>
</listitem>
</varlistentry>

</variablelist>
</para>
</section>

<section>
<title>Label</title>
<para>
The label to use for this command in the menu.
</para>
</section>

<section>
<title>Command</title>
<para>
The command to send to the Go program.
It can contain one of the following wildcards:
<variablelist>
<varlistentry>
<term><userinput>%f</userinput></term>
<listitem>
<simpara>
Will be replaced by a filename entered by the user.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><userinput>%m</userinput></term>
<listitem>
<simpara>
Will be replaced by the color to play.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><userinput>%p</userinput></term>
<listitem>
<simpara>
Will be replaced by the a point selected by the user.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><userinput>%P</userinput></term>
<listitem>
<simpara>
Will be replaced by a list of points selected by the user.
The points are selected by clicking on the board.
The last point of the list is selected either by clicking with the
<keycap>Ctrl</keycap> key pressed, double-clicking or using the right
mouse button.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><userinput>%s</userinput></term>
<listitem>
<simpara>
Will be replaced by an argument entered by the user.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</para>
</section>

<section>
<title>Section</title>
<para>
The response to the command is searched first until a single line
containing the section name followed by a colon is found.
The text following from the next line on is parsed as the actual response.
</para>
</section>

<section>
<title>Scale</title>
<para>
If the type is <userinput>dboard</userinput>, the numbers are scaled by
this factor.
</para>
</section>

</chapter>
