<appendix id="bugs">
<title>Bugs</title>

<section>
<title>Going to beginning or end of game is very slow</title>
<para>
There are no GTP commands for multiple undo or play, so every undo or
move has to be transmitted separately.
This can make going to the beginning or end of a large game very slow.
</para>
</section>

<section>
<title>Rendering errors in the GTP shell</title>
<para>
Rendering errors in the GTP shell window occur which disappear after manually
resizing the window.
This is probably a bug in the Java libraries.
With Java 1.4.2 for Linux this problem seems to have disappeared after
introducing a workaround which resets the window size after each text update.
With other Java versions or on other systems the problem can still exist.
</para>
</section>

<section>
<title>Command completions in the GTP shell are hiding text entry</title>
<para>
The pop up window with automatic command completions sometimes hides the
text entry when typing.
This is a problem in some implementations of the Java 1.4 libraries.
You can disable automatic command completion from the GTP shell menu.
</para>
</section>

<section>
<title>Stdout and stderr error in the GTP shell are not in order</title>
<para>
Unfortunately it is not possible with java.io to guarantee that stdout/stderr
of the Go program are in order, since stderr must be read from a different
thread. Using java.nio is not possible with the output streams of a process.
GoGui tries very hard to keep the order of stdout/stderr, but sometimes
it fails, especially if the Go program writes a lot to stderr before
writing the response to a command to stdout.
Also note that the Go program must flush stderr after writing, because
stderr is buffered when running a child process.
</para>
</section>

</appendix>
