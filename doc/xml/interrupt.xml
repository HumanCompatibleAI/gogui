  <chapter id="interrupt">
    <title>Interrupting commands</title>

    <para>
      Commands can be interrupted, if the Go program supports it.
    </para>
    
    <para>
      There are two ways of sending the interrupt signal to the program:
    </para>
    <orderedlist>
      <listitem>
	If the program can handle INT signals, it indicates this
	by implementing the <userinput>gogui_sigint</userinput> command
	and returning its process ID.
	GoGui will then send an INT signal to the process if the user
	presses the interrupt button
	(actually GoGui invokes the shell command
	<userinput>kill -INT <replaceable>pid</replaceable></userinput>,
	so this will work only on UNIX systems).
      </listitem>
      <listitem>
	If the program does not implement <userinput>gogui_sigint</userinput>,
	GoGui will send a special comment line
	(<userinput>#&#160;interrupt</userinput>) to the program.
	If the program reads the GTP input stream
	while processing a command, it can interrupt the command.
	Programs not aware of this convention will simply ignore
	the comment line.
      </listitem>
    </orderedlist>
  </chapter>
