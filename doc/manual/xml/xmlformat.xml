<appendix id="xmlformat">

<title>XML Format</title>

<para>
GoGui saves files that are valid XML files according to the document type
definition file as retrieved from
<ulink url="http://www.rene-grothmann.de/jago/Documentation/go.dtd">
http://www.rene-grothmann.de/jago/Documentation/go.dtd</ulink> in 10/2007.
A copy of this file is included in the GoGui package in
src/net/sf/gogui/xml/go.dtd.
It should be noted that the XML examples on Jago's web page and the format
of the files saved by Jago version 5.0 are not fully conforming to this
DTD file.
Therfore, GoGui does not strictly validate XML files and understands
some of the undocumented deviations used by Jago. However, unknown
elements or attributes are not preserved between reading and
writing an XML file. GoGui will show a warning, when reading such a file.
The following list explains more details about how GoGui handles XML files.
</para>

<itemizedlist>
<listitem>
<simpara>
GoGui uses the MIME-type application/x-go+xml for Go XML files in its desktop
configuration files (on GNU/Linux).
</simpara>
</listitem>
<listitem>
<simpara>
Pass moves are written as move elements with an empty string for the
at-property. Handling pass moves was first introduced by 
<ulink url="http://homepage.ntlworld.com/daniel.gilder/gosvg.html">
GoSVG</ulink>. Jago has read-support for pass moves since
version 5.0.
</simpara>
</listitem>
<listitem>
<simpara>
The XML documentation says that a paragraph element is optional
for comments that contain only a single paragraph, but the DTD file requires
them. GoGui will always store comments in a paragraph. When reading a file,
GoGui can handle the case of direct text in comments. However mixed text
and paragraph elements are not supported.
</simpara>
</listitem>
<listitem>
<simpara>
SGF comments can have linebreaks and use empty lines to separate paragraphs.
GoGui handle paragraphs like Jago does: every comment line (which may be
displayed using line-wrapping in the Gui) is stored in a paragraph, empty
lines are stored as paragraphs without text content.
</simpara>
</listitem>
<listitem>
<simpara>
According to the original DTD, valid children of GoGame are Information and
Nodes. Comment is not allowed as the first element in Nodes. However, the
first example on Jago's webpage shows a case, where a Comment and move
elements are direct children of GoGame. GoGui will always use Nodes and will
always embed a Comment in a Node, if it is the first element in Nodes.
When reading, a Comment can be the first element in Nodes, but Nodes is
required.
</simpara>
</listitem>
<listitem>
<simpara>
The BlackToPlay, WhiteToPlay elements in the DTD have no legal parent and it
is not clear why they have a text content.
Therefore, GoGui saves the player in a setup position
using the legacy SGF PL-property. However when reading a file, it handles
the above elements if they are the child of a Node element to set the current
player.
</simpara>
</listitem>
</itemizedlist>

</appendix>
